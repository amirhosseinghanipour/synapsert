// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ir.proto
// Protobuf C++ Version: 6.30.0

#ifndef ir_2eproto_2epb_2eh
#define ir_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ir_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ir_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_ir_2eproto;
}  // extern "C"
namespace synapsert {
class Graph;
struct GraphDefaultTypeInternal;
extern GraphDefaultTypeInternal _Graph_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Graph_class_data_;
class Graph_ProfilingDataEntry_DoNotUse;
struct Graph_ProfilingDataEntry_DoNotUseDefaultTypeInternal;
extern Graph_ProfilingDataEntry_DoNotUseDefaultTypeInternal _Graph_ProfilingDataEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Graph_ProfilingDataEntry_DoNotUse_class_data_;
class Graph_TensorsEntry_DoNotUse;
struct Graph_TensorsEntry_DoNotUseDefaultTypeInternal;
extern Graph_TensorsEntry_DoNotUseDefaultTypeInternal _Graph_TensorsEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Graph_TensorsEntry_DoNotUse_class_data_;
class Node;
struct NodeDefaultTypeInternal;
extern NodeDefaultTypeInternal _Node_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Node_class_data_;
class Node_AttributesEntry_DoNotUse;
struct Node_AttributesEntry_DoNotUseDefaultTypeInternal;
extern Node_AttributesEntry_DoNotUseDefaultTypeInternal _Node_AttributesEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Node_AttributesEntry_DoNotUse_class_data_;
class Tensor;
struct TensorDefaultTypeInternal;
extern TensorDefaultTypeInternal _Tensor_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Tensor_class_data_;
class Tensor_QuantParamsEntry_DoNotUse;
struct Tensor_QuantParamsEntry_DoNotUseDefaultTypeInternal;
extern Tensor_QuantParamsEntry_DoNotUseDefaultTypeInternal _Tensor_QuantParamsEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Tensor_QuantParamsEntry_DoNotUse_class_data_;
}  // namespace synapsert
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace synapsert {

// ===================================================================


// -------------------------------------------------------------------

class Tensor_QuantParamsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, float,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, float,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>;
  Tensor_QuantParamsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Tensor_QuantParamsEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit Tensor_QuantParamsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_Tensor_QuantParamsEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_ir_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 45,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull Tensor_QuantParamsEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class Node_AttributesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Node_AttributesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Node_AttributesEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit Node_AttributesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_Node_AttributesEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_ir_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 47,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull Node_AttributesEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class Graph_ProfilingDataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, float,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, float,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>;
  Graph_ProfilingDataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Graph_ProfilingDataEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit Graph_ProfilingDataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_Graph_ProfilingDataEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_ir_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 46,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull Graph_ProfilingDataEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class Tensor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:synapsert.Tensor) */ {
 public:
  inline Tensor() : Tensor(nullptr) {}
  ~Tensor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Tensor* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Tensor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Tensor(::google::protobuf::internal::ConstantInitialized);

  inline Tensor(const Tensor& from) : Tensor(nullptr, from) {}
  inline Tensor(Tensor&& from) noexcept
      : Tensor(nullptr, std::move(from)) {}
  inline Tensor& operator=(const Tensor& from) {
    CopyFrom(from);
    return *this;
  }
  inline Tensor& operator=(Tensor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Tensor& default_instance() {
    return *reinterpret_cast<const Tensor*>(
        &_Tensor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Tensor& a, Tensor& b) { a.Swap(&b); }
  inline void Swap(Tensor* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Tensor* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Tensor* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Tensor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Tensor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Tensor& from) { Tensor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Tensor* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "synapsert.Tensor"; }

 protected:
  explicit Tensor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Tensor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Tensor& from);
  Tensor(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Tensor&& from) noexcept
      : Tensor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShapeFieldNumber = 2,
    kQuantParamsFieldNumber = 6,
    kStridesFieldNumber = 8,
    kNameFieldNumber = 1,
    kDtypeFieldNumber = 3,
    kDataFieldNumber = 4,
    kLayoutFieldNumber = 5,
    kPaddingFieldNumber = 9,
    kIsSparseFieldNumber = 7,
  };
  // repeated int32 shape = 2;
  int shape_size() const;
  private:
  int _internal_shape_size() const;

  public:
  void clear_shape() ;
  ::int32_t shape(int index) const;
  void set_shape(int index, ::int32_t value);
  void add_shape(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& shape() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_shape();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_shape() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_shape();

  public:
  // map<string, float> quant_params = 6;
  int quant_params_size() const;
  private:
  int _internal_quant_params_size() const;

  public:
  void clear_quant_params() ;
  const ::google::protobuf::Map<std::string, float>& quant_params() const;
  ::google::protobuf::Map<std::string, float>* PROTOBUF_NONNULL mutable_quant_params();

  private:
  const ::google::protobuf::Map<std::string, float>& _internal_quant_params() const;
  ::google::protobuf::Map<std::string, float>* PROTOBUF_NONNULL _internal_mutable_quant_params();

  public:
  // repeated int32 strides = 8;
  int strides_size() const;
  private:
  int _internal_strides_size() const;

  public:
  void clear_strides() ;
  ::int32_t strides(int index) const;
  void set_strides(int index, ::int32_t value);
  void add_strides(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& strides() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_strides();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_strides() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_strides();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string dtype = 3;
  void clear_dtype() ;
  const std::string& dtype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dtype(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_dtype();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_dtype();
  void set_allocated_dtype(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_dtype() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_dtype(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_dtype();

  public:
  // bytes data = 4;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_data();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_data();
  void set_allocated_data(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // string layout = 5;
  void clear_layout() ;
  const std::string& layout() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_layout(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_layout();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_layout();
  void set_allocated_layout(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_layout() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_layout(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_layout();

  public:
  // string padding = 9;
  void clear_padding() ;
  const std::string& padding() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_padding(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_padding();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_padding();
  void set_allocated_padding(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_padding() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_padding(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_padding();

  public:
  // bool is_sparse = 7;
  void clear_is_sparse() ;
  bool is_sparse() const;
  void set_is_sparse(bool value);

  private:
  bool _internal_is_sparse() const;
  void _internal_set_is_sparse(bool value);

  public:
  // @@protoc_insertion_point(class_scope:synapsert.Tensor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   1, 67,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Tensor& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> shape_;
    ::google::protobuf::internal::CachedSize _shape_cached_byte_size_;
    ::google::protobuf::internal::MapField<Tensor_QuantParamsEntry_DoNotUse, std::string, float,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>
        quant_params_;
    ::google::protobuf::RepeatedField<::int32_t> strides_;
    ::google::protobuf::internal::CachedSize _strides_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr dtype_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr layout_;
    ::google::protobuf::internal::ArenaStringPtr padding_;
    bool is_sparse_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ir_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Tensor_class_data_;
// -------------------------------------------------------------------

class Node final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:synapsert.Node) */ {
 public:
  inline Node() : Node(nullptr) {}
  ~Node() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Node* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Node));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Node(::google::protobuf::internal::ConstantInitialized);

  inline Node(const Node& from) : Node(nullptr, from) {}
  inline Node(Node&& from) noexcept
      : Node(nullptr, std::move(from)) {}
  inline Node& operator=(const Node& from) {
    CopyFrom(from);
    return *this;
  }
  inline Node& operator=(Node&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Node& default_instance() {
    return *reinterpret_cast<const Node*>(
        &_Node_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Node& a, Node& b) { a.Swap(&b); }
  inline void Swap(Node* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Node* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Node* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Node>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Node& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Node& from) { Node::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Node* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "synapsert.Node"; }

 protected:
  explicit Node(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Node(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Node& from);
  Node(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Node&& from) noexcept
      : Node(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAttributesFieldNumber = 3,
    kInputsFieldNumber = 4,
    kOutputsFieldNumber = 5,
    kNameFieldNumber = 1,
    kOpTypeFieldNumber = 2,
    kControlFlowFieldNumber = 6,
    kHardwareSpecificInfoFieldNumber = 9,
    kFusedFieldNumber = 7,
    kExecutionTimeEstimateFieldNumber = 8,
  };
  // map<string, string> attributes = 3;
  int attributes_size() const;
  private:
  int _internal_attributes_size() const;

  public:
  void clear_attributes() ;
  const ::google::protobuf::Map<std::string, std::string>& attributes() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_attributes();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_attributes() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_attributes();

  public:
  // repeated string inputs = 4;
  int inputs_size() const;
  private:
  int _internal_inputs_size() const;

  public:
  void clear_inputs() ;
  const std::string& inputs(int index) const;
  std::string* PROTOBUF_NONNULL mutable_inputs(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_inputs(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_inputs();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_inputs(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& inputs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_inputs();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_inputs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_inputs();

  public:
  // repeated string outputs = 5;
  int outputs_size() const;
  private:
  int _internal_outputs_size() const;

  public:
  void clear_outputs() ;
  const std::string& outputs(int index) const;
  std::string* PROTOBUF_NONNULL mutable_outputs(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_outputs(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_outputs();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_outputs(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& outputs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_outputs();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_outputs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_outputs();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string op_type = 2;
  void clear_op_type() ;
  const std::string& op_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_op_type(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_op_type();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_op_type();
  void set_allocated_op_type(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_op_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_op_type(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_op_type();

  public:
  // string control_flow = 6;
  void clear_control_flow() ;
  const std::string& control_flow() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_control_flow(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_control_flow();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_control_flow();
  void set_allocated_control_flow(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_control_flow() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_control_flow(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_control_flow();

  public:
  // string hardware_specific_info = 9;
  void clear_hardware_specific_info() ;
  const std::string& hardware_specific_info() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hardware_specific_info(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_hardware_specific_info();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_hardware_specific_info();
  void set_allocated_hardware_specific_info(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_hardware_specific_info() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_hardware_specific_info(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_hardware_specific_info();

  public:
  // bool fused = 7;
  void clear_fused() ;
  bool fused() const;
  void set_fused(bool value);

  private:
  bool _internal_fused() const;
  void _internal_set_fused(bool value);

  public:
  // float execution_time_estimate = 8;
  void clear_execution_time_estimate() ;
  float execution_time_estimate() const;
  void set_execution_time_estimate(float value);

  private:
  float _internal_execution_time_estimate() const;
  void _internal_set_execution_time_estimate(float value);

  public:
  // @@protoc_insertion_point(class_scope:synapsert.Node)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   1, 99,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Node& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<Node_AttributesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        attributes_;
    ::google::protobuf::RepeatedPtrField<std::string> inputs_;
    ::google::protobuf::RepeatedPtrField<std::string> outputs_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr op_type_;
    ::google::protobuf::internal::ArenaStringPtr control_flow_;
    ::google::protobuf::internal::ArenaStringPtr hardware_specific_info_;
    bool fused_;
    float execution_time_estimate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ir_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Node_class_data_;
// -------------------------------------------------------------------

class Graph_TensorsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  Graph_TensorsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Graph_TensorsEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit Graph_TensorsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_Graph_TensorsEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_ir_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 40,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull Graph_TensorsEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class Graph final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:synapsert.Graph) */ {
 public:
  inline Graph() : Graph(nullptr) {}
  ~Graph() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Graph* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Graph));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Graph(::google::protobuf::internal::ConstantInitialized);

  inline Graph(const Graph& from) : Graph(nullptr, from) {}
  inline Graph(Graph&& from) noexcept
      : Graph(nullptr, std::move(from)) {}
  inline Graph& operator=(const Graph& from) {
    CopyFrom(from);
    return *this;
  }
  inline Graph& operator=(Graph&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Graph& default_instance() {
    return *reinterpret_cast<const Graph*>(
        &_Graph_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Graph& a, Graph& b) { a.Swap(&b); }
  inline void Swap(Graph* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Graph* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Graph* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Graph>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Graph& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Graph& from) { Graph::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Graph* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "synapsert.Graph"; }

 protected:
  explicit Graph(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Graph(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Graph& from);
  Graph(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Graph&& from) noexcept
      : Graph(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodesFieldNumber = 1,
    kTensorsFieldNumber = 2,
    kInputTensorsFieldNumber = 8,
    kOutputTensorsFieldNumber = 9,
    kProfilingDataFieldNumber = 10,
    kTargetFieldNumber = 3,
    kModelNameFieldNumber = 5,
    kModelVersionFieldNumber = 6,
    kAuthorFieldNumber = 7,
    kSecurityMetadataFieldNumber = 11,
    kQuantizedFieldNumber = 4,
  };
  // repeated .synapsert.Node nodes = 1;
  int nodes_size() const;
  private:
  int _internal_nodes_size() const;

  public:
  void clear_nodes() ;
  ::synapsert::Node* PROTOBUF_NONNULL mutable_nodes(int index);
  ::google::protobuf::RepeatedPtrField<::synapsert::Node>* PROTOBUF_NONNULL mutable_nodes();

  private:
  const ::google::protobuf::RepeatedPtrField<::synapsert::Node>& _internal_nodes() const;
  ::google::protobuf::RepeatedPtrField<::synapsert::Node>* PROTOBUF_NONNULL _internal_mutable_nodes();
  public:
  const ::synapsert::Node& nodes(int index) const;
  ::synapsert::Node* PROTOBUF_NONNULL add_nodes();
  const ::google::protobuf::RepeatedPtrField<::synapsert::Node>& nodes() const;
  // map<string, .synapsert.Tensor> tensors = 2;
  int tensors_size() const;
  private:
  int _internal_tensors_size() const;

  public:
  void clear_tensors() ;
  const ::google::protobuf::Map<std::string, ::synapsert::Tensor>& tensors() const;
  ::google::protobuf::Map<std::string, ::synapsert::Tensor>* PROTOBUF_NONNULL mutable_tensors();

  private:
  const ::google::protobuf::Map<std::string, ::synapsert::Tensor>& _internal_tensors() const;
  ::google::protobuf::Map<std::string, ::synapsert::Tensor>* PROTOBUF_NONNULL _internal_mutable_tensors();

  public:
  // repeated string input_tensors = 8;
  int input_tensors_size() const;
  private:
  int _internal_input_tensors_size() const;

  public:
  void clear_input_tensors() ;
  const std::string& input_tensors(int index) const;
  std::string* PROTOBUF_NONNULL mutable_input_tensors(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_input_tensors(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_input_tensors();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_input_tensors(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& input_tensors() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_input_tensors();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_input_tensors() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_input_tensors();

  public:
  // repeated string output_tensors = 9;
  int output_tensors_size() const;
  private:
  int _internal_output_tensors_size() const;

  public:
  void clear_output_tensors() ;
  const std::string& output_tensors(int index) const;
  std::string* PROTOBUF_NONNULL mutable_output_tensors(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_output_tensors(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_output_tensors();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_output_tensors(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& output_tensors() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_output_tensors();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_output_tensors() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_output_tensors();

  public:
  // map<string, float> profiling_data = 10;
  int profiling_data_size() const;
  private:
  int _internal_profiling_data_size() const;

  public:
  void clear_profiling_data() ;
  const ::google::protobuf::Map<std::string, float>& profiling_data() const;
  ::google::protobuf::Map<std::string, float>* PROTOBUF_NONNULL mutable_profiling_data();

  private:
  const ::google::protobuf::Map<std::string, float>& _internal_profiling_data() const;
  ::google::protobuf::Map<std::string, float>* PROTOBUF_NONNULL _internal_mutable_profiling_data();

  public:
  // string target = 3;
  void clear_target() ;
  const std::string& target() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_target();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_target();
  void set_allocated_target(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_target() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_target(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_target();

  public:
  // string model_name = 5;
  void clear_model_name() ;
  const std::string& model_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_model_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_model_name();
  void set_allocated_model_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_model_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_model_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_model_name();

  public:
  // string model_version = 6;
  void clear_model_version() ;
  const std::string& model_version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model_version(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_model_version();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_model_version();
  void set_allocated_model_version(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_model_version() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_model_version(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_model_version();

  public:
  // string author = 7;
  void clear_author() ;
  const std::string& author() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_author(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_author();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_author();
  void set_allocated_author(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_author() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_author(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_author();

  public:
  // string security_metadata = 11;
  void clear_security_metadata() ;
  const std::string& security_metadata() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_security_metadata(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_security_metadata();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_security_metadata();
  void set_allocated_security_metadata(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_security_metadata() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_security_metadata(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_security_metadata();

  public:
  // bool quantized = 4;
  void clear_quantized() ;
  bool quantized() const;
  void set_quantized(bool value);

  private:
  bool _internal_quantized() const;
  void _internal_set_quantized(bool value);

  public:
  // @@protoc_insertion_point(class_scope:synapsert.Graph)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 11,
                                   4, 132,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Graph& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::synapsert::Node > nodes_;
    ::google::protobuf::internal::MapField<Graph_TensorsEntry_DoNotUse, std::string, ::synapsert::Tensor,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        tensors_;
    ::google::protobuf::RepeatedPtrField<std::string> input_tensors_;
    ::google::protobuf::RepeatedPtrField<std::string> output_tensors_;
    ::google::protobuf::internal::MapField<Graph_ProfilingDataEntry_DoNotUse, std::string, float,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>
        profiling_data_;
    ::google::protobuf::internal::ArenaStringPtr target_;
    ::google::protobuf::internal::ArenaStringPtr model_name_;
    ::google::protobuf::internal::ArenaStringPtr model_version_;
    ::google::protobuf::internal::ArenaStringPtr author_;
    ::google::protobuf::internal::ArenaStringPtr security_metadata_;
    bool quantized_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ir_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Graph_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Tensor

// string name = 1;
inline void Tensor::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Tensor::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Tensor.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Tensor::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Tensor.name)
}
inline std::string* PROTOBUF_NONNULL Tensor::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:synapsert.Tensor.name)
  return _s;
}
inline const std::string& Tensor::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Tensor::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Tensor::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Tensor::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Tensor.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Tensor::set_allocated_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Tensor.name)
}

// repeated int32 shape = 2;
inline int Tensor::_internal_shape_size() const {
  return _internal_shape().size();
}
inline int Tensor::shape_size() const {
  return _internal_shape_size();
}
inline void Tensor::clear_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shape_.Clear();
}
inline ::int32_t Tensor::shape(int index) const {
  // @@protoc_insertion_point(field_get:synapsert.Tensor.shape)
  return _internal_shape().Get(index);
}
inline void Tensor::set_shape(int index, ::int32_t value) {
  _internal_mutable_shape()->Set(index, value);
  // @@protoc_insertion_point(field_set:synapsert.Tensor.shape)
}
inline void Tensor::add_shape(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_shape()->Add(value);
  // @@protoc_insertion_point(field_add:synapsert.Tensor.shape)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Tensor::shape() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:synapsert.Tensor.shape)
  return _internal_shape();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL Tensor::mutable_shape()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:synapsert.Tensor.shape)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_shape();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Tensor::_internal_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shape_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
Tensor::_internal_mutable_shape() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.shape_;
}

// string dtype = 3;
inline void Tensor::clear_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dtype_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Tensor::dtype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Tensor.dtype)
  return _internal_dtype();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Tensor::set_dtype(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.dtype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Tensor.dtype)
}
inline std::string* PROTOBUF_NONNULL Tensor::mutable_dtype()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dtype();
  // @@protoc_insertion_point(field_mutable:synapsert.Tensor.dtype)
  return _s;
}
inline const std::string& Tensor::_internal_dtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dtype_.Get();
}
inline void Tensor::_internal_set_dtype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.dtype_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Tensor::_internal_mutable_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.dtype_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Tensor::release_dtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Tensor.dtype)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.dtype_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.dtype_.Set("", GetArena());
  }
  return released;
}
inline void Tensor::set_allocated_dtype(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.dtype_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dtype_.IsDefault()) {
    _impl_.dtype_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Tensor.dtype)
}

// bytes data = 4;
inline void Tensor::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Tensor::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Tensor.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Tensor::set_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Tensor.data)
}
inline std::string* PROTOBUF_NONNULL Tensor::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:synapsert.Tensor.data)
  return _s;
}
inline const std::string& Tensor::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void Tensor::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Tensor::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Tensor::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Tensor.data)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_.Set("", GetArena());
  }
  return released;
}
inline void Tensor::set_allocated_data(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Tensor.data)
}

// string layout = 5;
inline void Tensor::clear_layout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layout_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Tensor::layout() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Tensor.layout)
  return _internal_layout();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Tensor::set_layout(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.layout_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Tensor.layout)
}
inline std::string* PROTOBUF_NONNULL Tensor::mutable_layout()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_layout();
  // @@protoc_insertion_point(field_mutable:synapsert.Tensor.layout)
  return _s;
}
inline const std::string& Tensor::_internal_layout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.layout_.Get();
}
inline void Tensor::_internal_set_layout(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.layout_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Tensor::_internal_mutable_layout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.layout_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Tensor::release_layout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Tensor.layout)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.layout_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.layout_.Set("", GetArena());
  }
  return released;
}
inline void Tensor::set_allocated_layout(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.layout_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.layout_.IsDefault()) {
    _impl_.layout_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Tensor.layout)
}

// map<string, float> quant_params = 6;
inline int Tensor::_internal_quant_params_size() const {
  return _internal_quant_params().size();
}
inline int Tensor::quant_params_size() const {
  return _internal_quant_params_size();
}
inline void Tensor::clear_quant_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quant_params_.Clear();
}
inline const ::google::protobuf::Map<std::string, float>& Tensor::_internal_quant_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quant_params_.GetMap();
}
inline const ::google::protobuf::Map<std::string, float>& Tensor::quant_params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:synapsert.Tensor.quant_params)
  return _internal_quant_params();
}
inline ::google::protobuf::Map<std::string, float>* PROTOBUF_NONNULL Tensor::_internal_mutable_quant_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.quant_params_.MutableMap();
}
inline ::google::protobuf::Map<std::string, float>* PROTOBUF_NONNULL Tensor::mutable_quant_params()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:synapsert.Tensor.quant_params)
  return _internal_mutable_quant_params();
}

// bool is_sparse = 7;
inline void Tensor::clear_is_sparse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_sparse_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool Tensor::is_sparse() const {
  // @@protoc_insertion_point(field_get:synapsert.Tensor.is_sparse)
  return _internal_is_sparse();
}
inline void Tensor::set_is_sparse(bool value) {
  _internal_set_is_sparse(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:synapsert.Tensor.is_sparse)
}
inline bool Tensor::_internal_is_sparse() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_sparse_;
}
inline void Tensor::_internal_set_is_sparse(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_sparse_ = value;
}

// repeated int32 strides = 8;
inline int Tensor::_internal_strides_size() const {
  return _internal_strides().size();
}
inline int Tensor::strides_size() const {
  return _internal_strides_size();
}
inline void Tensor::clear_strides() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strides_.Clear();
}
inline ::int32_t Tensor::strides(int index) const {
  // @@protoc_insertion_point(field_get:synapsert.Tensor.strides)
  return _internal_strides().Get(index);
}
inline void Tensor::set_strides(int index, ::int32_t value) {
  _internal_mutable_strides()->Set(index, value);
  // @@protoc_insertion_point(field_set:synapsert.Tensor.strides)
}
inline void Tensor::add_strides(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_strides()->Add(value);
  // @@protoc_insertion_point(field_add:synapsert.Tensor.strides)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Tensor::strides() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:synapsert.Tensor.strides)
  return _internal_strides();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL Tensor::mutable_strides()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:synapsert.Tensor.strides)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_strides();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Tensor::_internal_strides() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strides_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
Tensor::_internal_mutable_strides() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.strides_;
}

// string padding = 9;
inline void Tensor::clear_padding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.padding_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& Tensor::padding() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Tensor.padding)
  return _internal_padding();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Tensor::set_padding(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.padding_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Tensor.padding)
}
inline std::string* PROTOBUF_NONNULL Tensor::mutable_padding()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_padding();
  // @@protoc_insertion_point(field_mutable:synapsert.Tensor.padding)
  return _s;
}
inline const std::string& Tensor::_internal_padding() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.padding_.Get();
}
inline void Tensor::_internal_set_padding(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.padding_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Tensor::_internal_mutable_padding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.padding_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Tensor::release_padding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Tensor.padding)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.padding_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.padding_.Set("", GetArena());
  }
  return released;
}
inline void Tensor::set_allocated_padding(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.padding_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.padding_.IsDefault()) {
    _impl_.padding_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Tensor.padding)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Node

// string name = 1;
inline void Node::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Node::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Node.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Node::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Node.name)
}
inline std::string* PROTOBUF_NONNULL Node::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:synapsert.Node.name)
  return _s;
}
inline const std::string& Node::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Node::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Node::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Node::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Node.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Node::set_allocated_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Node.name)
}

// string op_type = 2;
inline void Node::clear_op_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Node::op_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Node.op_type)
  return _internal_op_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Node::set_op_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.op_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Node.op_type)
}
inline std::string* PROTOBUF_NONNULL Node::mutable_op_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_op_type();
  // @@protoc_insertion_point(field_mutable:synapsert.Node.op_type)
  return _s;
}
inline const std::string& Node::_internal_op_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_type_.Get();
}
inline void Node::_internal_set_op_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.op_type_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Node::_internal_mutable_op_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.op_type_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Node::release_op_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Node.op_type)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.op_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.op_type_.Set("", GetArena());
  }
  return released;
}
inline void Node::set_allocated_op_type(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.op_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.op_type_.IsDefault()) {
    _impl_.op_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Node.op_type)
}

// map<string, string> attributes = 3;
inline int Node::_internal_attributes_size() const {
  return _internal_attributes().size();
}
inline int Node::attributes_size() const {
  return _internal_attributes_size();
}
inline void Node::clear_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributes_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Node::_internal_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributes_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Node::attributes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:synapsert.Node.attributes)
  return _internal_attributes();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL Node::_internal_mutable_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attributes_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL Node::mutable_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:synapsert.Node.attributes)
  return _internal_mutable_attributes();
}

// repeated string inputs = 4;
inline int Node::_internal_inputs_size() const {
  return _internal_inputs().size();
}
inline int Node::inputs_size() const {
  return _internal_inputs_size();
}
inline void Node::clear_inputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputs_.Clear();
}
inline std::string* PROTOBUF_NONNULL Node::add_inputs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_inputs()->Add();
  // @@protoc_insertion_point(field_add_mutable:synapsert.Node.inputs)
  return _s;
}
inline const std::string& Node::inputs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Node.inputs)
  return _internal_inputs().Get(index);
}
inline std::string* PROTOBUF_NONNULL Node::mutable_inputs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:synapsert.Node.inputs)
  return _internal_mutable_inputs()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Node::set_inputs(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_inputs()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:synapsert.Node.inputs)
}
template <typename Arg_, typename... Args_>
inline void Node::add_inputs(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_inputs(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:synapsert.Node.inputs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& Node::inputs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:synapsert.Node.inputs)
  return _internal_inputs();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
Node::mutable_inputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:synapsert.Node.inputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_inputs();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Node::_internal_inputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inputs_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
Node::_internal_mutable_inputs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.inputs_;
}

// repeated string outputs = 5;
inline int Node::_internal_outputs_size() const {
  return _internal_outputs().size();
}
inline int Node::outputs_size() const {
  return _internal_outputs_size();
}
inline void Node::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
inline std::string* PROTOBUF_NONNULL Node::add_outputs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_outputs()->Add();
  // @@protoc_insertion_point(field_add_mutable:synapsert.Node.outputs)
  return _s;
}
inline const std::string& Node::outputs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Node.outputs)
  return _internal_outputs().Get(index);
}
inline std::string* PROTOBUF_NONNULL Node::mutable_outputs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:synapsert.Node.outputs)
  return _internal_mutable_outputs()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Node::set_outputs(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_outputs()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:synapsert.Node.outputs)
}
template <typename Arg_, typename... Args_>
inline void Node::add_outputs(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_outputs(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:synapsert.Node.outputs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& Node::outputs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:synapsert.Node.outputs)
  return _internal_outputs();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
Node::mutable_outputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:synapsert.Node.outputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_outputs();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Node::_internal_outputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outputs_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
Node::_internal_mutable_outputs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.outputs_;
}

// string control_flow = 6;
inline void Node::clear_control_flow() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_flow_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Node::control_flow() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Node.control_flow)
  return _internal_control_flow();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Node::set_control_flow(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.control_flow_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Node.control_flow)
}
inline std::string* PROTOBUF_NONNULL Node::mutable_control_flow()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_control_flow();
  // @@protoc_insertion_point(field_mutable:synapsert.Node.control_flow)
  return _s;
}
inline const std::string& Node::_internal_control_flow() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.control_flow_.Get();
}
inline void Node::_internal_set_control_flow(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.control_flow_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Node::_internal_mutable_control_flow() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.control_flow_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Node::release_control_flow() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Node.control_flow)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.control_flow_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.control_flow_.Set("", GetArena());
  }
  return released;
}
inline void Node::set_allocated_control_flow(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.control_flow_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.control_flow_.IsDefault()) {
    _impl_.control_flow_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Node.control_flow)
}

// bool fused = 7;
inline void Node::clear_fused() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fused_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool Node::fused() const {
  // @@protoc_insertion_point(field_get:synapsert.Node.fused)
  return _internal_fused();
}
inline void Node::set_fused(bool value) {
  _internal_set_fused(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:synapsert.Node.fused)
}
inline bool Node::_internal_fused() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fused_;
}
inline void Node::_internal_set_fused(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fused_ = value;
}

// float execution_time_estimate = 8;
inline void Node::clear_execution_time_estimate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_time_estimate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float Node::execution_time_estimate() const {
  // @@protoc_insertion_point(field_get:synapsert.Node.execution_time_estimate)
  return _internal_execution_time_estimate();
}
inline void Node::set_execution_time_estimate(float value) {
  _internal_set_execution_time_estimate(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:synapsert.Node.execution_time_estimate)
}
inline float Node::_internal_execution_time_estimate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.execution_time_estimate_;
}
inline void Node::_internal_set_execution_time_estimate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_time_estimate_ = value;
}

// string hardware_specific_info = 9;
inline void Node::clear_hardware_specific_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardware_specific_info_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Node::hardware_specific_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Node.hardware_specific_info)
  return _internal_hardware_specific_info();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Node::set_hardware_specific_info(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.hardware_specific_info_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Node.hardware_specific_info)
}
inline std::string* PROTOBUF_NONNULL Node::mutable_hardware_specific_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hardware_specific_info();
  // @@protoc_insertion_point(field_mutable:synapsert.Node.hardware_specific_info)
  return _s;
}
inline const std::string& Node::_internal_hardware_specific_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hardware_specific_info_.Get();
}
inline void Node::_internal_set_hardware_specific_info(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.hardware_specific_info_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Node::_internal_mutable_hardware_specific_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.hardware_specific_info_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Node::release_hardware_specific_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Node.hardware_specific_info)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.hardware_specific_info_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.hardware_specific_info_.Set("", GetArena());
  }
  return released;
}
inline void Node::set_allocated_hardware_specific_info(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.hardware_specific_info_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.hardware_specific_info_.IsDefault()) {
    _impl_.hardware_specific_info_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Node.hardware_specific_info)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Graph

// repeated .synapsert.Node nodes = 1;
inline int Graph::_internal_nodes_size() const {
  return _internal_nodes().size();
}
inline int Graph::nodes_size() const {
  return _internal_nodes_size();
}
inline void Graph::clear_nodes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nodes_.Clear();
}
inline ::synapsert::Node* PROTOBUF_NONNULL Graph::mutable_nodes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:synapsert.Graph.nodes)
  return _internal_mutable_nodes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::synapsert::Node>* PROTOBUF_NONNULL Graph::mutable_nodes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:synapsert.Graph.nodes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nodes();
}
inline const ::synapsert::Node& Graph::nodes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Graph.nodes)
  return _internal_nodes().Get(index);
}
inline ::synapsert::Node* PROTOBUF_NONNULL Graph::add_nodes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::synapsert::Node* _add = _internal_mutable_nodes()->Add();
  // @@protoc_insertion_point(field_add:synapsert.Graph.nodes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::synapsert::Node>& Graph::nodes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:synapsert.Graph.nodes)
  return _internal_nodes();
}
inline const ::google::protobuf::RepeatedPtrField<::synapsert::Node>&
Graph::_internal_nodes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nodes_;
}
inline ::google::protobuf::RepeatedPtrField<::synapsert::Node>* PROTOBUF_NONNULL
Graph::_internal_mutable_nodes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nodes_;
}

// map<string, .synapsert.Tensor> tensors = 2;
inline int Graph::_internal_tensors_size() const {
  return _internal_tensors().size();
}
inline int Graph::tensors_size() const {
  return _internal_tensors_size();
}
inline void Graph::clear_tensors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tensors_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::synapsert::Tensor>& Graph::_internal_tensors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tensors_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::synapsert::Tensor>& Graph::tensors() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:synapsert.Graph.tensors)
  return _internal_tensors();
}
inline ::google::protobuf::Map<std::string, ::synapsert::Tensor>* PROTOBUF_NONNULL Graph::_internal_mutable_tensors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tensors_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::synapsert::Tensor>* PROTOBUF_NONNULL Graph::mutable_tensors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:synapsert.Graph.tensors)
  return _internal_mutable_tensors();
}

// string target = 3;
inline void Graph::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Graph::target() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Graph.target)
  return _internal_target();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Graph::set_target(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.target_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Graph.target)
}
inline std::string* PROTOBUF_NONNULL Graph::mutable_target()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:synapsert.Graph.target)
  return _s;
}
inline const std::string& Graph::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_.Get();
}
inline void Graph::_internal_set_target(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.target_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Graph::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.target_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Graph::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Graph.target)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.target_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.target_.Set("", GetArena());
  }
  return released;
}
inline void Graph::set_allocated_target(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.target_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_.IsDefault()) {
    _impl_.target_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Graph.target)
}

// bool quantized = 4;
inline void Graph::clear_quantized() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantized_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool Graph::quantized() const {
  // @@protoc_insertion_point(field_get:synapsert.Graph.quantized)
  return _internal_quantized();
}
inline void Graph::set_quantized(bool value) {
  _internal_set_quantized(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:synapsert.Graph.quantized)
}
inline bool Graph::_internal_quantized() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantized_;
}
inline void Graph::_internal_set_quantized(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantized_ = value;
}

// string model_name = 5;
inline void Graph::clear_model_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Graph::model_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Graph.model_name)
  return _internal_model_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Graph::set_model_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.model_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Graph.model_name)
}
inline std::string* PROTOBUF_NONNULL Graph::mutable_model_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model_name();
  // @@protoc_insertion_point(field_mutable:synapsert.Graph.model_name)
  return _s;
}
inline const std::string& Graph::_internal_model_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_name_.Get();
}
inline void Graph::_internal_set_model_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.model_name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Graph::_internal_mutable_model_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.model_name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Graph::release_model_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Graph.model_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.model_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.model_name_.Set("", GetArena());
  }
  return released;
}
inline void Graph::set_allocated_model_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.model_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.model_name_.IsDefault()) {
    _impl_.model_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Graph.model_name)
}

// string model_version = 6;
inline void Graph::clear_model_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Graph::model_version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Graph.model_version)
  return _internal_model_version();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Graph::set_model_version(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.model_version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Graph.model_version)
}
inline std::string* PROTOBUF_NONNULL Graph::mutable_model_version()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model_version();
  // @@protoc_insertion_point(field_mutable:synapsert.Graph.model_version)
  return _s;
}
inline const std::string& Graph::_internal_model_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_version_.Get();
}
inline void Graph::_internal_set_model_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.model_version_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Graph::_internal_mutable_model_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.model_version_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Graph::release_model_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Graph.model_version)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.model_version_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.model_version_.Set("", GetArena());
  }
  return released;
}
inline void Graph::set_allocated_model_version(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.model_version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.model_version_.IsDefault()) {
    _impl_.model_version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Graph.model_version)
}

// string author = 7;
inline void Graph::clear_author() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.author_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Graph::author() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Graph.author)
  return _internal_author();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Graph::set_author(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.author_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Graph.author)
}
inline std::string* PROTOBUF_NONNULL Graph::mutable_author()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_author();
  // @@protoc_insertion_point(field_mutable:synapsert.Graph.author)
  return _s;
}
inline const std::string& Graph::_internal_author() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.author_.Get();
}
inline void Graph::_internal_set_author(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.author_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Graph::_internal_mutable_author() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.author_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Graph::release_author() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Graph.author)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.author_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.author_.Set("", GetArena());
  }
  return released;
}
inline void Graph::set_allocated_author(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.author_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.author_.IsDefault()) {
    _impl_.author_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Graph.author)
}

// repeated string input_tensors = 8;
inline int Graph::_internal_input_tensors_size() const {
  return _internal_input_tensors().size();
}
inline int Graph::input_tensors_size() const {
  return _internal_input_tensors_size();
}
inline void Graph::clear_input_tensors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_tensors_.Clear();
}
inline std::string* PROTOBUF_NONNULL Graph::add_input_tensors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_input_tensors()->Add();
  // @@protoc_insertion_point(field_add_mutable:synapsert.Graph.input_tensors)
  return _s;
}
inline const std::string& Graph::input_tensors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Graph.input_tensors)
  return _internal_input_tensors().Get(index);
}
inline std::string* PROTOBUF_NONNULL Graph::mutable_input_tensors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:synapsert.Graph.input_tensors)
  return _internal_mutable_input_tensors()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Graph::set_input_tensors(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_input_tensors()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:synapsert.Graph.input_tensors)
}
template <typename Arg_, typename... Args_>
inline void Graph::add_input_tensors(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_input_tensors(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:synapsert.Graph.input_tensors)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& Graph::input_tensors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:synapsert.Graph.input_tensors)
  return _internal_input_tensors();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
Graph::mutable_input_tensors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:synapsert.Graph.input_tensors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_input_tensors();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Graph::_internal_input_tensors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_tensors_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
Graph::_internal_mutable_input_tensors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.input_tensors_;
}

// repeated string output_tensors = 9;
inline int Graph::_internal_output_tensors_size() const {
  return _internal_output_tensors().size();
}
inline int Graph::output_tensors_size() const {
  return _internal_output_tensors_size();
}
inline void Graph::clear_output_tensors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_tensors_.Clear();
}
inline std::string* PROTOBUF_NONNULL Graph::add_output_tensors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_output_tensors()->Add();
  // @@protoc_insertion_point(field_add_mutable:synapsert.Graph.output_tensors)
  return _s;
}
inline const std::string& Graph::output_tensors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Graph.output_tensors)
  return _internal_output_tensors().Get(index);
}
inline std::string* PROTOBUF_NONNULL Graph::mutable_output_tensors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:synapsert.Graph.output_tensors)
  return _internal_mutable_output_tensors()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Graph::set_output_tensors(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_output_tensors()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:synapsert.Graph.output_tensors)
}
template <typename Arg_, typename... Args_>
inline void Graph::add_output_tensors(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_output_tensors(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:synapsert.Graph.output_tensors)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& Graph::output_tensors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:synapsert.Graph.output_tensors)
  return _internal_output_tensors();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
Graph::mutable_output_tensors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:synapsert.Graph.output_tensors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_output_tensors();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Graph::_internal_output_tensors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_tensors_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
Graph::_internal_mutable_output_tensors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.output_tensors_;
}

// map<string, float> profiling_data = 10;
inline int Graph::_internal_profiling_data_size() const {
  return _internal_profiling_data().size();
}
inline int Graph::profiling_data_size() const {
  return _internal_profiling_data_size();
}
inline void Graph::clear_profiling_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profiling_data_.Clear();
}
inline const ::google::protobuf::Map<std::string, float>& Graph::_internal_profiling_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.profiling_data_.GetMap();
}
inline const ::google::protobuf::Map<std::string, float>& Graph::profiling_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:synapsert.Graph.profiling_data)
  return _internal_profiling_data();
}
inline ::google::protobuf::Map<std::string, float>* PROTOBUF_NONNULL Graph::_internal_mutable_profiling_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.profiling_data_.MutableMap();
}
inline ::google::protobuf::Map<std::string, float>* PROTOBUF_NONNULL Graph::mutable_profiling_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:synapsert.Graph.profiling_data)
  return _internal_mutable_profiling_data();
}

// string security_metadata = 11;
inline void Graph::clear_security_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.security_metadata_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& Graph::security_metadata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:synapsert.Graph.security_metadata)
  return _internal_security_metadata();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Graph::set_security_metadata(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.security_metadata_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:synapsert.Graph.security_metadata)
}
inline std::string* PROTOBUF_NONNULL Graph::mutable_security_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_security_metadata();
  // @@protoc_insertion_point(field_mutable:synapsert.Graph.security_metadata)
  return _s;
}
inline const std::string& Graph::_internal_security_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.security_metadata_.Get();
}
inline void Graph::_internal_set_security_metadata(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.security_metadata_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Graph::_internal_mutable_security_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.security_metadata_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Graph::release_security_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:synapsert.Graph.security_metadata)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.security_metadata_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.security_metadata_.Set("", GetArena());
  }
  return released;
}
inline void Graph::set_allocated_security_metadata(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.security_metadata_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.security_metadata_.IsDefault()) {
    _impl_.security_metadata_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:synapsert.Graph.security_metadata)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace synapsert


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ir_2eproto_2epb_2eh
