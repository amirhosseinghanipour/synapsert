// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ir.proto
// Protobuf C++ Version: 6.30.0

#include "ir.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace synapsert {
template <typename>
PROTOBUF_CONSTEXPR Tensor_QuantParamsEntry_DoNotUse::Tensor_QuantParamsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Tensor_QuantParamsEntry_DoNotUse::MapEntry(Tensor_QuantParamsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Tensor_QuantParamsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Tensor_QuantParamsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Tensor_QuantParamsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Tensor_QuantParamsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Tensor_QuantParamsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Tensor_QuantParamsEntry_DoNotUseDefaultTypeInternal _Tensor_QuantParamsEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Node_AttributesEntry_DoNotUse::Node_AttributesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Node_AttributesEntry_DoNotUse::MapEntry(Node_AttributesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Node_AttributesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Node_AttributesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Node_AttributesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Node_AttributesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Node_AttributesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Node_AttributesEntry_DoNotUseDefaultTypeInternal _Node_AttributesEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Graph_ProfilingDataEntry_DoNotUse::Graph_ProfilingDataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Graph_ProfilingDataEntry_DoNotUse::MapEntry(Graph_ProfilingDataEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Graph_ProfilingDataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Graph_ProfilingDataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Graph_ProfilingDataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Graph_ProfilingDataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Graph_ProfilingDataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Graph_ProfilingDataEntry_DoNotUseDefaultTypeInternal _Graph_ProfilingDataEntry_DoNotUse_default_instance_;

inline constexpr Tensor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        shape_{},
        _shape_cached_byte_size_{0},
        quant_params_{},
        strides_{},
        _strides_cached_byte_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dtype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        layout_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        padding_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_sparse_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Tensor::Tensor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Tensor_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorDefaultTypeInternal() {}
  union {
    Tensor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorDefaultTypeInternal _Tensor_default_instance_;

inline constexpr Node::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        attributes_{},
        inputs_{},
        outputs_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        op_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        control_flow_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hardware_specific_info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fused_{false},
        execution_time_estimate_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Node::Node(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Node_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeDefaultTypeInternal() {}
  union {
    Node _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeDefaultTypeInternal _Node_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Graph_TensorsEntry_DoNotUse::Graph_TensorsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Graph_TensorsEntry_DoNotUse::MapEntry(Graph_TensorsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Graph_TensorsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Graph_TensorsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Graph_TensorsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Graph_TensorsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Graph_TensorsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Graph_TensorsEntry_DoNotUseDefaultTypeInternal _Graph_TensorsEntry_DoNotUse_default_instance_;

inline constexpr Graph::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        nodes_{},
        tensors_{},
        input_tensors_{},
        output_tensors_{},
        profiling_data_{},
        target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        model_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        model_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        author_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        security_metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantized_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Graph::Graph(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Graph_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphDefaultTypeInternal() {}
  union {
    Graph _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphDefaultTypeInternal _Graph_default_instance_;
}  // namespace synapsert
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_ir_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_ir_2eproto = nullptr;
const ::uint32_t
    TableStruct_ir_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor_QuantParamsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor_QuantParamsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor_QuantParamsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor_QuantParamsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor, _impl_.shape_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor, _impl_.dtype_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor, _impl_.layout_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor, _impl_.quant_params_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor, _impl_.is_sparse_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor, _impl_.strides_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Tensor, _impl_.padding_),
        0,
        ~0u,
        1,
        2,
        3,
        ~0u,
        5,
        ~0u,
        4,
        PROTOBUF_FIELD_OFFSET(::synapsert::Node_AttributesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Node_AttributesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::synapsert::Node_AttributesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Node_AttributesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::synapsert::Node, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Node, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::synapsert::Node, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Node, _impl_.op_type_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Node, _impl_.attributes_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Node, _impl_.inputs_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Node, _impl_.outputs_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Node, _impl_.control_flow_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Node, _impl_.fused_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Node, _impl_.execution_time_estimate_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Node, _impl_.hardware_specific_info_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        2,
        4,
        5,
        3,
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph_TensorsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph_TensorsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph_TensorsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph_TensorsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph_ProfilingDataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph_ProfilingDataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph_ProfilingDataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph_ProfilingDataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph, _impl_.nodes_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph, _impl_.tensors_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph, _impl_.quantized_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph, _impl_.model_name_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph, _impl_.model_version_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph, _impl_.author_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph, _impl_.input_tensors_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph, _impl_.output_tensors_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph, _impl_.profiling_data_),
        PROTOBUF_FIELD_OFFSET(::synapsert::Graph, _impl_.security_metadata_),
        ~0u,
        ~0u,
        0,
        5,
        1,
        2,
        3,
        ~0u,
        ~0u,
        ~0u,
        4,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::synapsert::Tensor_QuantParamsEntry_DoNotUse)},
        {12, 29, -1, sizeof(::synapsert::Tensor)},
        {38, 48, -1, sizeof(::synapsert::Node_AttributesEntry_DoNotUse)},
        {50, 67, -1, sizeof(::synapsert::Node)},
        {76, 86, -1, sizeof(::synapsert::Graph_TensorsEntry_DoNotUse)},
        {88, 98, -1, sizeof(::synapsert::Graph_ProfilingDataEntry_DoNotUse)},
        {100, 119, -1, sizeof(::synapsert::Graph)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::synapsert::_Tensor_QuantParamsEntry_DoNotUse_default_instance_._instance,
    &::synapsert::_Tensor_default_instance_._instance,
    &::synapsert::_Node_AttributesEntry_DoNotUse_default_instance_._instance,
    &::synapsert::_Node_default_instance_._instance,
    &::synapsert::_Graph_TensorsEntry_DoNotUse_default_instance_._instance,
    &::synapsert::_Graph_ProfilingDataEntry_DoNotUse_default_instance_._instance,
    &::synapsert::_Graph_default_instance_._instance,
};
const char descriptor_table_protodef_ir_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\010ir.proto\022\tsynapsert\"\365\001\n\006Tensor\022\014\n\004name"
    "\030\001 \001(\t\022\r\n\005shape\030\002 \003(\005\022\r\n\005dtype\030\003 \001(\t\022\014\n\004"
    "data\030\004 \001(\014\022\016\n\006layout\030\005 \001(\t\0228\n\014quant_para"
    "ms\030\006 \003(\0132\".synapsert.Tensor.QuantParamsE"
    "ntry\022\021\n\tis_sparse\030\007 \001(\010\022\017\n\007strides\030\010 \003(\005"
    "\022\017\n\007padding\030\t \001(\t\0322\n\020QuantParamsEntry\022\013\n"
    "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\002:\0028\001\"\224\002\n\004Node\022\014"
    "\n\004name\030\001 \001(\t\022\017\n\007op_type\030\002 \001(\t\0223\n\nattribu"
    "tes\030\003 \003(\0132\037.synapsert.Node.AttributesEnt"
    "ry\022\016\n\006inputs\030\004 \003(\t\022\017\n\007outputs\030\005 \003(\t\022\024\n\014c"
    "ontrol_flow\030\006 \001(\t\022\r\n\005fused\030\007 \001(\010\022\037\n\027exec"
    "ution_time_estimate\030\010 \001(\002\022\036\n\026hardware_sp"
    "ecific_info\030\t \001(\t\0321\n\017AttributesEntry\022\013\n\003"
    "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\265\003\n\005Graph\022\036"
    "\n\005nodes\030\001 \003(\0132\017.synapsert.Node\022.\n\007tensor"
    "s\030\002 \003(\0132\035.synapsert.Graph.TensorsEntry\022\016"
    "\n\006target\030\003 \001(\t\022\021\n\tquantized\030\004 \001(\010\022\022\n\nmod"
    "el_name\030\005 \001(\t\022\025\n\rmodel_version\030\006 \001(\t\022\016\n\006"
    "author\030\007 \001(\t\022\025\n\rinput_tensors\030\010 \003(\t\022\026\n\016o"
    "utput_tensors\030\t \003(\t\022;\n\016profiling_data\030\n "
    "\003(\0132#.synapsert.Graph.ProfilingDataEntry"
    "\022\031\n\021security_metadata\030\013 \001(\t\032A\n\014TensorsEn"
    "try\022\013\n\003key\030\001 \001(\t\022 \n\005value\030\002 \001(\0132\021.synaps"
    "ert.Tensor:\0028\001\0324\n\022ProfilingDataEntry\022\013\n\003"
    "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\002:\0028\001b\006proto3"
};
static ::absl::once_flag descriptor_table_ir_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ir_2eproto = {
    false,
    false,
    996,
    descriptor_table_protodef_ir_2eproto,
    "ir.proto",
    &descriptor_table_ir_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_ir_2eproto::offsets,
    file_level_enum_descriptors_ir_2eproto,
    file_level_service_descriptors_ir_2eproto,
};
namespace synapsert {
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
Tensor_QuantParamsEntry_DoNotUse::Tensor_QuantParamsEntry_DoNotUse()
    : SuperType(Tensor_QuantParamsEntry_DoNotUse_class_data_.base()) {}
Tensor_QuantParamsEntry_DoNotUse::Tensor_QuantParamsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, Tensor_QuantParamsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
Tensor_QuantParamsEntry_DoNotUse::Tensor_QuantParamsEntry_DoNotUse() : SuperType() {}
Tensor_QuantParamsEntry_DoNotUse::Tensor_QuantParamsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL Tensor_QuantParamsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Tensor_QuantParamsEntry_DoNotUse(arena);
}
constexpr auto Tensor_QuantParamsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Tensor_QuantParamsEntry_DoNotUse),
                                            alignof(Tensor_QuantParamsEntry_DoNotUse));
}
constexpr auto Tensor_QuantParamsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Tensor_QuantParamsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Tensor_QuantParamsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Tensor_QuantParamsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Tensor_QuantParamsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&Tensor_QuantParamsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Tensor_QuantParamsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &Tensor_QuantParamsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_ir_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Tensor_QuantParamsEntry_DoNotUse_class_data_ =
            Tensor_QuantParamsEntry_DoNotUse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Tensor_QuantParamsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Tensor_QuantParamsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Tensor_QuantParamsEntry_DoNotUse_class_data_.tc_table);
  return Tensor_QuantParamsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 45, 2>
Tensor_QuantParamsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Tensor_QuantParamsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Tensor_QuantParamsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::synapsert::Tensor_QuantParamsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float value = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Tensor_QuantParamsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Tensor_QuantParamsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Tensor_QuantParamsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float value = 2;
    {PROTOBUF_FIELD_OFFSET(Tensor_QuantParamsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\41\3\0\0\0\0\0\0"
    "synapsert.Tensor.QuantParamsEntry"
    "key"
  }},
};
// ===================================================================

class Tensor::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Tensor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Tensor, _impl_._has_bits_);
};

Tensor::Tensor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Tensor_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:synapsert.Tensor)
}
PROTOBUF_NDEBUG_INLINE Tensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::synapsert::Tensor& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        shape_{visibility, arena, from.shape_},
        _shape_cached_byte_size_{0},
        quant_params_{visibility, arena, from.quant_params_},
        strides_{visibility, arena, from.strides_},
        _strides_cached_byte_size_{0},
        name_(arena, from.name_),
        dtype_(arena, from.dtype_),
        data_(arena, from.data_),
        layout_(arena, from.layout_),
        padding_(arena, from.padding_) {}

Tensor::Tensor(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Tensor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Tensor_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Tensor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_sparse_ = from._impl_.is_sparse_;

  // @@protoc_insertion_point(copy_constructor:synapsert.Tensor)
}
PROTOBUF_NDEBUG_INLINE Tensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        shape_{visibility, arena},
        _shape_cached_byte_size_{0},
        quant_params_{visibility, arena},
        strides_{visibility, arena},
        _strides_cached_byte_size_{0},
        name_(arena),
        dtype_(arena),
        data_(arena),
        layout_(arena),
        padding_(arena) {}

inline void Tensor::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_sparse_ = {};
}
Tensor::~Tensor() {
  // @@protoc_insertion_point(destructor:synapsert.Tensor)
  SharedDtor(*this);
}
inline void Tensor::SharedDtor(MessageLite& self) {
  Tensor& this_ = static_cast<Tensor&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.dtype_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.layout_.Destroy();
  this_._impl_.padding_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Tensor::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Tensor(arena);
}
constexpr auto Tensor::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Tensor, _impl_.shape_) +
          decltype(Tensor::_impl_.shape_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Tensor, _impl_.quant_params_) +
          decltype(Tensor::_impl_.quant_params_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Tensor, _impl_.quant_params_) +
          decltype(Tensor::_impl_.quant_params_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Tensor, _impl_.strides_) +
          decltype(Tensor::_impl_.strides_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Tensor), alignof(Tensor), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Tensor::PlacementNew_,
                                 sizeof(Tensor),
                                 alignof(Tensor));
  }
}
constexpr auto Tensor::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Tensor_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Tensor::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Tensor>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Tensor::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Tensor>(), &Tensor::ByteSizeLong,
              &Tensor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Tensor, _impl_._cached_size_),
          false,
      },
      &Tensor::kDescriptorMethods,
      &descriptor_table_ir_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Tensor_class_data_ =
            Tensor::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Tensor::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Tensor_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Tensor_class_data_.tc_table);
  return Tensor_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 67, 2>
Tensor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Tensor, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Tensor_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::synapsert::Tensor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.name_)}},
    // repeated int32 shape = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.shape_)}},
    // string dtype = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.dtype_)}},
    // bytes data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.data_)}},
    // string layout = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.layout_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_sparse = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Tensor, _impl_.is_sparse_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.is_sparse_)}},
    // repeated int32 strides = 8;
    {::_pbi::TcParser::FastV32P1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.strides_)}},
    // string padding = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 4, 0, PROTOBUF_FIELD_OFFSET(Tensor, _impl_.padding_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated int32 shape = 2;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.shape_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // string dtype = 3;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.dtype_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes data = 4;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.data_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // string layout = 5;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.layout_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, float> quant_params = 6;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.quant_params_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool is_sparse = 7;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.is_sparse_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated int32 strides = 8;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.strides_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // string padding = 9;
    {PROTOBUF_FIELD_OFFSET(Tensor, _impl_.padding_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 2,
                                       0)},
  }},
  {{
    "\20\4\0\5\0\6\14\0\0\7\0\0\0\0\0\0"
    "synapsert.Tensor"
    "name"
    "dtype"
    "layout"
    "quant_params"
    "padding"
  }},
};
PROTOBUF_NOINLINE void Tensor::Clear() {
// @@protoc_insertion_point(message_clear_start:synapsert.Tensor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shape_.Clear();
  _impl_.quant_params_.Clear();
  _impl_.strides_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.dtype_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.layout_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.padding_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.is_sparse_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Tensor::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Tensor& this_ = static_cast<const Tensor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Tensor::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Tensor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:synapsert.Tensor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Tensor.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated int32 shape = 2;
  {
    int byte_size = this_._impl_._shape_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, this_._internal_shape(), byte_size, target);
    }
  }

  // string dtype = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_dtype().empty()) {
      const std::string& _s = this_._internal_dtype();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Tensor.dtype");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // bytes data = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_data().empty()) {
      const std::string& _s = this_._internal_data();
      target = stream->WriteBytesMaybeAliased(4, _s, target);
    }
  }

  // string layout = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_layout().empty()) {
      const std::string& _s = this_._internal_layout();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Tensor.layout");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // map<string, float> quant_params = 6;
  if (!this_._internal_quant_params().empty()) {
    using MapType = ::google::protobuf::Map<std::string, float>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, float,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_FLOAT>;
    const auto& field = this_._internal_quant_params();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Tensor.quant_params");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Tensor.quant_params");
      }
    }
  }

  // bool is_sparse = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_is_sparse() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_is_sparse(), target);
    }
  }

  // repeated int32 strides = 8;
  {
    int byte_size = this_._impl_._strides_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          8, this_._internal_strides(), byte_size, target);
    }
  }

  // string padding = 9;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._internal_padding().empty()) {
      const std::string& _s = this_._internal_padding();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Tensor.padding");
      target = stream->WriteStringMaybeAliased(9, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:synapsert.Tensor)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Tensor::ByteSizeLong(const MessageLite& base) {
  const Tensor& this_ = static_cast<const Tensor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Tensor::ByteSizeLong() const {
  const Tensor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:synapsert.Tensor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int32 shape = 2;
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_shape(), 1,
              this_._impl_._shape_cached_byte_size_);
    }
    // map<string, float> quant_params = 6;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_quant_params_size());
      for (const auto& entry : this_._internal_quant_params()) {
        total_size += _pbi::MapEntryFuncs<std::string, float,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_FLOAT>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated int32 strides = 8;
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_strides(), 1,
              this_._impl_._strides_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string dtype = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_dtype().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_dtype());
      }
    }
    // bytes data = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_data().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_data());
      }
    }
    // string layout = 5;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_layout().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_layout());
      }
    }
    // string padding = 9;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_padding().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_padding());
      }
    }
    // bool is_sparse = 7;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_is_sparse() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Tensor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Tensor*>(&to_msg);
  auto& from = static_cast<const Tensor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:synapsert.Tensor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_shape()->MergeFrom(from._internal_shape());
  _this->_impl_.quant_params_.MergeFrom(from._impl_.quant_params_);
  _this->_internal_mutable_strides()->MergeFrom(from._internal_strides());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_dtype().empty()) {
        _this->_internal_set_dtype(from._internal_dtype());
      } else {
        if (_this->_impl_.dtype_.IsDefault()) {
          _this->_internal_set_dtype("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_data().empty()) {
        _this->_internal_set_data(from._internal_data());
      } else {
        if (_this->_impl_.data_.IsDefault()) {
          _this->_internal_set_data("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_layout().empty()) {
        _this->_internal_set_layout(from._internal_layout());
      } else {
        if (_this->_impl_.layout_.IsDefault()) {
          _this->_internal_set_layout("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_padding().empty()) {
        _this->_internal_set_padding(from._internal_padding());
      } else {
        if (_this->_impl_.padding_.IsDefault()) {
          _this->_internal_set_padding("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_is_sparse() != 0) {
        _this->_impl_.is_sparse_ = from._impl_.is_sparse_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Tensor::CopyFrom(const Tensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:synapsert.Tensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Tensor::InternalSwap(Tensor* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.shape_.InternalSwap(&other->_impl_.shape_);
  _impl_.quant_params_.InternalSwap(&other->_impl_.quant_params_);
  _impl_.strides_.InternalSwap(&other->_impl_.strides_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dtype_, &other->_impl_.dtype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.layout_, &other->_impl_.layout_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.padding_, &other->_impl_.padding_, arena);
  swap(_impl_.is_sparse_, other->_impl_.is_sparse_);
}

::google::protobuf::Metadata Tensor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
Node_AttributesEntry_DoNotUse::Node_AttributesEntry_DoNotUse()
    : SuperType(Node_AttributesEntry_DoNotUse_class_data_.base()) {}
Node_AttributesEntry_DoNotUse::Node_AttributesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, Node_AttributesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
Node_AttributesEntry_DoNotUse::Node_AttributesEntry_DoNotUse() : SuperType() {}
Node_AttributesEntry_DoNotUse::Node_AttributesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL Node_AttributesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Node_AttributesEntry_DoNotUse(arena);
}
constexpr auto Node_AttributesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Node_AttributesEntry_DoNotUse),
                                            alignof(Node_AttributesEntry_DoNotUse));
}
constexpr auto Node_AttributesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Node_AttributesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Node_AttributesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Node_AttributesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Node_AttributesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&Node_AttributesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Node_AttributesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &Node_AttributesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_ir_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Node_AttributesEntry_DoNotUse_class_data_ =
            Node_AttributesEntry_DoNotUse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Node_AttributesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Node_AttributesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Node_AttributesEntry_DoNotUse_class_data_.tc_table);
  return Node_AttributesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2>
Node_AttributesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Node_AttributesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Node_AttributesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::synapsert::Node_AttributesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Node_AttributesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Node_AttributesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Node_AttributesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Node_AttributesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\3\5\0\0\0\0\0"
    "synapsert.Node.AttributesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class Node::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Node>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Node, _impl_._has_bits_);
};

Node::Node(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Node_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:synapsert.Node)
}
PROTOBUF_NDEBUG_INLINE Node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::synapsert::Node& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        attributes_{visibility, arena, from.attributes_},
        inputs_{visibility, arena, from.inputs_},
        outputs_{visibility, arena, from.outputs_},
        name_(arena, from.name_),
        op_type_(arena, from.op_type_),
        control_flow_(arena, from.control_flow_),
        hardware_specific_info_(arena, from.hardware_specific_info_) {}

Node::Node(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Node& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Node_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Node* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fused_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, fused_),
           offsetof(Impl_, execution_time_estimate_) -
               offsetof(Impl_, fused_) +
               sizeof(Impl_::execution_time_estimate_));

  // @@protoc_insertion_point(copy_constructor:synapsert.Node)
}
PROTOBUF_NDEBUG_INLINE Node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        attributes_{visibility, arena},
        inputs_{visibility, arena},
        outputs_{visibility, arena},
        name_(arena),
        op_type_(arena),
        control_flow_(arena),
        hardware_specific_info_(arena) {}

inline void Node::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fused_),
           0,
           offsetof(Impl_, execution_time_estimate_) -
               offsetof(Impl_, fused_) +
               sizeof(Impl_::execution_time_estimate_));
}
Node::~Node() {
  // @@protoc_insertion_point(destructor:synapsert.Node)
  SharedDtor(*this);
}
inline void Node::SharedDtor(MessageLite& self) {
  Node& this_ = static_cast<Node&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.op_type_.Destroy();
  this_._impl_.control_flow_.Destroy();
  this_._impl_.hardware_specific_info_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Node::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Node(arena);
}
constexpr auto Node::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Node, _impl_.attributes_) +
          decltype(Node::_impl_.attributes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Node, _impl_.attributes_) +
          decltype(Node::_impl_.attributes_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Node, _impl_.inputs_) +
          decltype(Node::_impl_.inputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Node, _impl_.outputs_) +
          decltype(Node::_impl_.outputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Node), alignof(Node), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Node::PlacementNew_,
                                 sizeof(Node),
                                 alignof(Node));
  }
}
constexpr auto Node::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Node_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Node::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Node>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Node::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Node>(), &Node::ByteSizeLong,
              &Node::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Node, _impl_._cached_size_),
          false,
      },
      &Node::kDescriptorMethods,
      &descriptor_table_ir_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Node_class_data_ =
            Node::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Node::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Node_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Node_class_data_.tc_table);
  return Node_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 99, 2>
Node::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Node, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Node_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::synapsert::Node>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.name_)}},
    // string op_type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.op_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string inputs = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.inputs_)}},
    // repeated string outputs = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.outputs_)}},
    // string control_flow = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.control_flow_)}},
    // bool fused = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Node, _impl_.fused_), 4>(),
     {56, 4, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.fused_)}},
    // float execution_time_estimate = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 5, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.execution_time_estimate_)}},
    // string hardware_specific_info = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 3, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.hardware_specific_info_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string op_type = 2;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.op_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> attributes = 3;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated string inputs = 4;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.inputs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string outputs = 5;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.outputs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string control_flow = 6;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.control_flow_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool fused = 7;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.fused_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // float execution_time_estimate = 8;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.execution_time_estimate_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // string hardware_specific_info = 9;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.hardware_specific_info_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\16\4\7\12\6\7\14\0\0\26\0\0\0\0\0\0"
    "synapsert.Node"
    "name"
    "op_type"
    "attributes"
    "inputs"
    "outputs"
    "control_flow"
    "hardware_specific_info"
  }},
};
PROTOBUF_NOINLINE void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:synapsert.Node)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attributes_.Clear();
  _impl_.inputs_.Clear();
  _impl_.outputs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.op_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.control_flow_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.hardware_specific_info_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000030u) != 0) {
    ::memset(&_impl_.fused_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.execution_time_estimate_) -
        reinterpret_cast<char*>(&_impl_.fused_)) + sizeof(_impl_.execution_time_estimate_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Node::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Node& this_ = static_cast<const Node&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Node::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Node& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:synapsert.Node)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Node.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string op_type = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_op_type().empty()) {
      const std::string& _s = this_._internal_op_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Node.op_type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // map<string, string> attributes = 3;
  if (!this_._internal_attributes().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_attributes();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Node.attributes");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Node.attributes");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Node.attributes");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Node.attributes");
      }
    }
  }

  // repeated string inputs = 4;
  for (int i = 0, n = this_._internal_inputs_size(); i < n; ++i) {
    const auto& s = this_._internal_inputs().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Node.inputs");
    target = stream->WriteString(4, s, target);
  }

  // repeated string outputs = 5;
  for (int i = 0, n = this_._internal_outputs_size(); i < n; ++i) {
    const auto& s = this_._internal_outputs().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Node.outputs");
    target = stream->WriteString(5, s, target);
  }

  // string control_flow = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_control_flow().empty()) {
      const std::string& _s = this_._internal_control_flow();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Node.control_flow");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // bool fused = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_fused() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_fused(), target);
    }
  }

  // float execution_time_estimate = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_execution_time_estimate()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          8, this_._internal_execution_time_estimate(), target);
    }
  }

  // string hardware_specific_info = 9;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_hardware_specific_info().empty()) {
      const std::string& _s = this_._internal_hardware_specific_info();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Node.hardware_specific_info");
      target = stream->WriteStringMaybeAliased(9, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:synapsert.Node)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Node::ByteSizeLong(const MessageLite& base) {
  const Node& this_ = static_cast<const Node&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Node::ByteSizeLong() const {
  const Node& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:synapsert.Node)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> attributes = 3;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_attributes_size());
      for (const auto& entry : this_._internal_attributes()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated string inputs = 4;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_inputs().size());
      for (int i = 0, n = this_._internal_inputs().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_inputs().Get(i));
      }
    }
    // repeated string outputs = 5;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_outputs().size());
      for (int i = 0, n = this_._internal_outputs().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_outputs().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string op_type = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_op_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_op_type());
      }
    }
    // string control_flow = 6;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_control_flow().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_control_flow());
      }
    }
    // string hardware_specific_info = 9;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_hardware_specific_info().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_hardware_specific_info());
      }
    }
    // bool fused = 7;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_fused() != 0) {
        total_size += 2;
      }
    }
    // float execution_time_estimate = 8;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_execution_time_estimate()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Node::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Node*>(&to_msg);
  auto& from = static_cast<const Node&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:synapsert.Node)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.attributes_.MergeFrom(from._impl_.attributes_);
  _this->_internal_mutable_inputs()->MergeFrom(from._internal_inputs());
  _this->_internal_mutable_outputs()->MergeFrom(from._internal_outputs());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_op_type().empty()) {
        _this->_internal_set_op_type(from._internal_op_type());
      } else {
        if (_this->_impl_.op_type_.IsDefault()) {
          _this->_internal_set_op_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_control_flow().empty()) {
        _this->_internal_set_control_flow(from._internal_control_flow());
      } else {
        if (_this->_impl_.control_flow_.IsDefault()) {
          _this->_internal_set_control_flow("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_hardware_specific_info().empty()) {
        _this->_internal_set_hardware_specific_info(from._internal_hardware_specific_info());
      } else {
        if (_this->_impl_.hardware_specific_info_.IsDefault()) {
          _this->_internal_set_hardware_specific_info("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_fused() != 0) {
        _this->_impl_.fused_ = from._impl_.fused_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_execution_time_estimate()) != 0) {
        _this->_impl_.execution_time_estimate_ = from._impl_.execution_time_estimate_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:synapsert.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Node::InternalSwap(Node* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.op_type_, &other->_impl_.op_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.control_flow_, &other->_impl_.control_flow_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hardware_specific_info_, &other->_impl_.hardware_specific_info_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Node, _impl_.execution_time_estimate_)
      + sizeof(Node::_impl_.execution_time_estimate_)
      - PROTOBUF_FIELD_OFFSET(Node, _impl_.fused_)>(
          reinterpret_cast<char*>(&_impl_.fused_),
          reinterpret_cast<char*>(&other->_impl_.fused_));
}

::google::protobuf::Metadata Node::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
Graph_TensorsEntry_DoNotUse::Graph_TensorsEntry_DoNotUse()
    : SuperType(Graph_TensorsEntry_DoNotUse_class_data_.base()) {}
Graph_TensorsEntry_DoNotUse::Graph_TensorsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, Graph_TensorsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
Graph_TensorsEntry_DoNotUse::Graph_TensorsEntry_DoNotUse() : SuperType() {}
Graph_TensorsEntry_DoNotUse::Graph_TensorsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL Graph_TensorsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Graph_TensorsEntry_DoNotUse(arena);
}
constexpr auto Graph_TensorsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Graph_TensorsEntry_DoNotUse),
                                            alignof(Graph_TensorsEntry_DoNotUse));
}
constexpr auto Graph_TensorsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Graph_TensorsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Graph_TensorsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Graph_TensorsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Graph_TensorsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&Graph_TensorsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Graph_TensorsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &Graph_TensorsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_ir_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Graph_TensorsEntry_DoNotUse_class_data_ =
            Graph_TensorsEntry_DoNotUse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Graph_TensorsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Graph_TensorsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Graph_TensorsEntry_DoNotUse_class_data_.tc_table);
  return Graph_TensorsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 40, 2>
Graph_TensorsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Graph_TensorsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Graph_TensorsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::synapsert::Graph_TensorsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .synapsert.Tensor value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Graph_TensorsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Graph_TensorsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Graph_TensorsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .synapsert.Tensor value = 2;
    {PROTOBUF_FIELD_OFFSET(Graph_TensorsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::synapsert::Tensor>()},
  }},
  {{
    "\34\3\0\0\0\0\0\0"
    "synapsert.Graph.TensorsEntry"
    "key"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
Graph_ProfilingDataEntry_DoNotUse::Graph_ProfilingDataEntry_DoNotUse()
    : SuperType(Graph_ProfilingDataEntry_DoNotUse_class_data_.base()) {}
Graph_ProfilingDataEntry_DoNotUse::Graph_ProfilingDataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, Graph_ProfilingDataEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
Graph_ProfilingDataEntry_DoNotUse::Graph_ProfilingDataEntry_DoNotUse() : SuperType() {}
Graph_ProfilingDataEntry_DoNotUse::Graph_ProfilingDataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL Graph_ProfilingDataEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Graph_ProfilingDataEntry_DoNotUse(arena);
}
constexpr auto Graph_ProfilingDataEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Graph_ProfilingDataEntry_DoNotUse),
                                            alignof(Graph_ProfilingDataEntry_DoNotUse));
}
constexpr auto Graph_ProfilingDataEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Graph_ProfilingDataEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Graph_ProfilingDataEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Graph_ProfilingDataEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Graph_ProfilingDataEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&Graph_ProfilingDataEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Graph_ProfilingDataEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &Graph_ProfilingDataEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_ir_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Graph_ProfilingDataEntry_DoNotUse_class_data_ =
            Graph_ProfilingDataEntry_DoNotUse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Graph_ProfilingDataEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Graph_ProfilingDataEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Graph_ProfilingDataEntry_DoNotUse_class_data_.tc_table);
  return Graph_ProfilingDataEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2>
Graph_ProfilingDataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Graph_ProfilingDataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Graph_ProfilingDataEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::synapsert::Graph_ProfilingDataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float value = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Graph_ProfilingDataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Graph_ProfilingDataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Graph_ProfilingDataEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float value = 2;
    {PROTOBUF_FIELD_OFFSET(Graph_ProfilingDataEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\42\3\0\0\0\0\0\0"
    "synapsert.Graph.ProfilingDataEntry"
    "key"
  }},
};
// ===================================================================

class Graph::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Graph>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Graph, _impl_._has_bits_);
};

Graph::Graph(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Graph_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:synapsert.Graph)
}
PROTOBUF_NDEBUG_INLINE Graph::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::synapsert::Graph& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        nodes_{visibility, arena, from.nodes_},
        tensors_{visibility, arena, from.tensors_},
        input_tensors_{visibility, arena, from.input_tensors_},
        output_tensors_{visibility, arena, from.output_tensors_},
        profiling_data_{visibility, arena, from.profiling_data_},
        target_(arena, from.target_),
        model_name_(arena, from.model_name_),
        model_version_(arena, from.model_version_),
        author_(arena, from.author_),
        security_metadata_(arena, from.security_metadata_) {}

Graph::Graph(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Graph& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Graph_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Graph* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.quantized_ = from._impl_.quantized_;

  // @@protoc_insertion_point(copy_constructor:synapsert.Graph)
}
PROTOBUF_NDEBUG_INLINE Graph::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        nodes_{visibility, arena},
        tensors_{visibility, arena},
        input_tensors_{visibility, arena},
        output_tensors_{visibility, arena},
        profiling_data_{visibility, arena},
        target_(arena),
        model_name_(arena),
        model_version_(arena),
        author_(arena),
        security_metadata_(arena) {}

inline void Graph::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.quantized_ = {};
}
Graph::~Graph() {
  // @@protoc_insertion_point(destructor:synapsert.Graph)
  SharedDtor(*this);
}
inline void Graph::SharedDtor(MessageLite& self) {
  Graph& this_ = static_cast<Graph&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_.Destroy();
  this_._impl_.model_name_.Destroy();
  this_._impl_.model_version_.Destroy();
  this_._impl_.author_.Destroy();
  this_._impl_.security_metadata_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Graph::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Graph(arena);
}
constexpr auto Graph::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Graph, _impl_.nodes_) +
          decltype(Graph::_impl_.nodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Graph, _impl_.tensors_) +
          decltype(Graph::_impl_.tensors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Graph, _impl_.tensors_) +
          decltype(Graph::_impl_.tensors_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Graph, _impl_.input_tensors_) +
          decltype(Graph::_impl_.input_tensors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Graph, _impl_.output_tensors_) +
          decltype(Graph::_impl_.output_tensors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Graph, _impl_.profiling_data_) +
          decltype(Graph::_impl_.profiling_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Graph, _impl_.profiling_data_) +
          decltype(Graph::_impl_.profiling_data_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Graph), alignof(Graph), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Graph::PlacementNew_,
                                 sizeof(Graph),
                                 alignof(Graph));
  }
}
constexpr auto Graph::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Graph_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Graph::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Graph>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Graph::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Graph>(), &Graph::ByteSizeLong,
              &Graph::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Graph, _impl_._cached_size_),
          false,
      },
      &Graph::kDescriptorMethods,
      &descriptor_table_ir_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Graph_class_data_ =
            Graph::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Graph::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Graph_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Graph_class_data_.tc_table);
  return Graph_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 4, 132, 2>
Graph::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Graph, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Graph_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::synapsert::Graph>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .synapsert.Node nodes = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Graph, _impl_.nodes_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string target = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Graph, _impl_.target_)}},
    // bool quantized = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Graph, _impl_.quantized_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(Graph, _impl_.quantized_)}},
    // string model_name = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(Graph, _impl_.model_name_)}},
    // string model_version = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(Graph, _impl_.model_version_)}},
    // string author = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(Graph, _impl_.author_)}},
    // repeated string input_tensors = 8;
    {::_pbi::TcParser::FastUR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Graph, _impl_.input_tensors_)}},
    // repeated string output_tensors = 9;
    {::_pbi::TcParser::FastUR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Graph, _impl_.output_tensors_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string security_metadata = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 4, 0, PROTOBUF_FIELD_OFFSET(Graph, _impl_.security_metadata_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .synapsert.Node nodes = 1;
    {PROTOBUF_FIELD_OFFSET(Graph, _impl_.nodes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .synapsert.Tensor> tensors = 2;
    {PROTOBUF_FIELD_OFFSET(Graph, _impl_.tensors_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string target = 3;
    {PROTOBUF_FIELD_OFFSET(Graph, _impl_.target_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool quantized = 4;
    {PROTOBUF_FIELD_OFFSET(Graph, _impl_.quantized_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string model_name = 5;
    {PROTOBUF_FIELD_OFFSET(Graph, _impl_.model_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string model_version = 6;
    {PROTOBUF_FIELD_OFFSET(Graph, _impl_.model_version_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string author = 7;
    {PROTOBUF_FIELD_OFFSET(Graph, _impl_.author_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string input_tensors = 8;
    {PROTOBUF_FIELD_OFFSET(Graph, _impl_.input_tensors_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string output_tensors = 9;
    {PROTOBUF_FIELD_OFFSET(Graph, _impl_.output_tensors_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, float> profiling_data = 10;
    {PROTOBUF_FIELD_OFFSET(Graph, _impl_.profiling_data_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string security_metadata = 11;
    {PROTOBUF_FIELD_OFFSET(Graph, _impl_.security_metadata_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::synapsert::Node>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::synapsert::Tensor>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 2,
                                       0)},
  }},
  {{
    "\17\0\7\6\0\12\15\6\15\16\16\21\0\0\0\0"
    "synapsert.Graph"
    "tensors"
    "target"
    "model_name"
    "model_version"
    "author"
    "input_tensors"
    "output_tensors"
    "profiling_data"
    "security_metadata"
  }},
};
PROTOBUF_NOINLINE void Graph::Clear() {
// @@protoc_insertion_point(message_clear_start:synapsert.Graph)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodes_.Clear();
  _impl_.tensors_.Clear();
  _impl_.input_tensors_.Clear();
  _impl_.output_tensors_.Clear();
  _impl_.profiling_data_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.target_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.model_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.model_version_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.author_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.security_metadata_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.quantized_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Graph::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Graph& this_ = static_cast<const Graph&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Graph::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Graph& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:synapsert.Graph)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .synapsert.Node nodes = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_nodes_size());
       i < n; i++) {
    const auto& repfield = this_._internal_nodes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // map<string, .synapsert.Tensor> tensors = 2;
  if (!this_._internal_tensors().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::synapsert::Tensor>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::synapsert::Tensor,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_tensors();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Graph.tensors");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Graph.tensors");
      }
    }
  }

  // string target = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_target().empty()) {
      const std::string& _s = this_._internal_target();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Graph.target");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // bool quantized = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_quantized() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_quantized(), target);
    }
  }

  // string model_name = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_model_name().empty()) {
      const std::string& _s = this_._internal_model_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Graph.model_name");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // string model_version = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_model_version().empty()) {
      const std::string& _s = this_._internal_model_version();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Graph.model_version");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // string author = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_author().empty()) {
      const std::string& _s = this_._internal_author();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Graph.author");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // repeated string input_tensors = 8;
  for (int i = 0, n = this_._internal_input_tensors_size(); i < n; ++i) {
    const auto& s = this_._internal_input_tensors().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Graph.input_tensors");
    target = stream->WriteString(8, s, target);
  }

  // repeated string output_tensors = 9;
  for (int i = 0, n = this_._internal_output_tensors_size(); i < n; ++i) {
    const auto& s = this_._internal_output_tensors().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Graph.output_tensors");
    target = stream->WriteString(9, s, target);
  }

  // map<string, float> profiling_data = 10;
  if (!this_._internal_profiling_data().empty()) {
    using MapType = ::google::protobuf::Map<std::string, float>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, float,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_FLOAT>;
    const auto& field = this_._internal_profiling_data();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            10, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Graph.profiling_data");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            10, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Graph.profiling_data");
      }
    }
  }

  // string security_metadata = 11;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._internal_security_metadata().empty()) {
      const std::string& _s = this_._internal_security_metadata();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "synapsert.Graph.security_metadata");
      target = stream->WriteStringMaybeAliased(11, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:synapsert.Graph)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Graph::ByteSizeLong(const MessageLite& base) {
  const Graph& this_ = static_cast<const Graph&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Graph::ByteSizeLong() const {
  const Graph& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:synapsert.Graph)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .synapsert.Node nodes = 1;
    {
      total_size += 1UL * this_._internal_nodes_size();
      for (const auto& msg : this_._internal_nodes()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // map<string, .synapsert.Tensor> tensors = 2;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tensors_size());
      for (const auto& entry : this_._internal_tensors()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::synapsert::Tensor,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated string input_tensors = 8;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_input_tensors().size());
      for (int i = 0, n = this_._internal_input_tensors().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_input_tensors().Get(i));
      }
    }
    // repeated string output_tensors = 9;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_output_tensors().size());
      for (int i = 0, n = this_._internal_output_tensors().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_output_tensors().Get(i));
      }
    }
    // map<string, float> profiling_data = 10;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_profiling_data_size());
      for (const auto& entry : this_._internal_profiling_data()) {
        total_size += _pbi::MapEntryFuncs<std::string, float,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_FLOAT>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string target = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_target().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_target());
      }
    }
    // string model_name = 5;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_model_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_model_name());
      }
    }
    // string model_version = 6;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_model_version().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_model_version());
      }
    }
    // string author = 7;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_author().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_author());
      }
    }
    // string security_metadata = 11;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_security_metadata().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_security_metadata());
      }
    }
    // bool quantized = 4;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_quantized() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Graph::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Graph*>(&to_msg);
  auto& from = static_cast<const Graph&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:synapsert.Graph)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_nodes()->MergeFrom(
      from._internal_nodes());
  _this->_impl_.tensors_.MergeFrom(from._impl_.tensors_);
  _this->_internal_mutable_input_tensors()->MergeFrom(from._internal_input_tensors());
  _this->_internal_mutable_output_tensors()->MergeFrom(from._internal_output_tensors());
  _this->_impl_.profiling_data_.MergeFrom(from._impl_.profiling_data_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_target().empty()) {
        _this->_internal_set_target(from._internal_target());
      } else {
        if (_this->_impl_.target_.IsDefault()) {
          _this->_internal_set_target("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_model_name().empty()) {
        _this->_internal_set_model_name(from._internal_model_name());
      } else {
        if (_this->_impl_.model_name_.IsDefault()) {
          _this->_internal_set_model_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_model_version().empty()) {
        _this->_internal_set_model_version(from._internal_model_version());
      } else {
        if (_this->_impl_.model_version_.IsDefault()) {
          _this->_internal_set_model_version("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_author().empty()) {
        _this->_internal_set_author(from._internal_author());
      } else {
        if (_this->_impl_.author_.IsDefault()) {
          _this->_internal_set_author("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_security_metadata().empty()) {
        _this->_internal_set_security_metadata(from._internal_security_metadata());
      } else {
        if (_this->_impl_.security_metadata_.IsDefault()) {
          _this->_internal_set_security_metadata("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_quantized() != 0) {
        _this->_impl_.quantized_ = from._impl_.quantized_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Graph::CopyFrom(const Graph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:synapsert.Graph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Graph::InternalSwap(Graph* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  _impl_.tensors_.InternalSwap(&other->_impl_.tensors_);
  _impl_.input_tensors_.InternalSwap(&other->_impl_.input_tensors_);
  _impl_.output_tensors_.InternalSwap(&other->_impl_.output_tensors_);
  _impl_.profiling_data_.InternalSwap(&other->_impl_.profiling_data_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_name_, &other->_impl_.model_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_version_, &other->_impl_.model_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.author_, &other->_impl_.author_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.security_metadata_, &other->_impl_.security_metadata_, arena);
  swap(_impl_.quantized_, other->_impl_.quantized_);
}

::google::protobuf::Metadata Graph::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace synapsert
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_ir_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
